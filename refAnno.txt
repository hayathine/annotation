JAVAのSPRINGを使ってアノテーション機能を実装する。
クーポンバンクを参考にしながら実装。
１．フロントエンドからのリクエストを受け取ってレスポンスを返す。
２．データベースを作成してサーバーへのCRUD操作を行う。

@RestController@Controller
	クラスをコントローラとして認識させている。
	二つの違いはRestControllerの場合、returnの値がそのままレスポンスのコンテンツになる。
	JSON や XML などを返す WebAPI 用の Controllerで使用される。
	一方でControllerはreturnの値で htmlに遷移することなどができる。 

@RequestMapping
	ルーティング情報を提供。HTTPリクエストとメソッドを紐づける。
@SpringBootApplication
	@SpringBootConfiguration、@EnableAutoConfiguration、@ComponentScan を組み合わせたもの。
	@Configuration: アプリケーションコンテキストの Bean 定義のソースとしてクラスにタグを付けます。
	@EnableAutoConfiguration: クラスパス設定、他の Bean、さまざまなプロパティ設定に基づいて Bean の追加を開始するよう Spring Boot に指示します。例: spring-webmvc がクラスパスにある場合、このアノテーションはアプリケーションに Web アプリケーションとしてフラグを立て、DispatcherServlet のセットアップなどの主要な動作をアクティブにします。
	@ComponentScan: Spring に、com/example パッケージ内の他のコンポーネント、構成、サービスを探して、コントローラーを検出させるように指示します。
@RequestParam
	ビューにパラメータを渡す。バインディングが可能。
Spring Boot Devtools 
	変更のコーディング、アプリケーションの再起動、変更を表示するためのブラウザーのリフレッシュ等を簡単にできる。